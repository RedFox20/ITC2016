cmake_minimum_required(VERSION 3.3)
project(ITC2016 C CXX)

add_definitions(-DSFML_STATIC -DGLEW_STATIC -DDEBUG)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14")

set(SOURCE_FILES main.cpp util.cpp util.hpp vertex3d.cpp vertex3d.hpp Model.cpp Model.hpp types3d.cpp types3d.hpp GLEW/glew.c)
set(OUT ITC2016)
add_executable(${OUT} ${SOURCE_FILES})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin")
include_directories("${CMAKE_SOURCE_DIR}")
include_directories("${CMAKE_SOURCE_DIR}/include")

# Note: static library link order is important here...
if(MINGW)
    set(SFML_DIR ${CMAKE_SOURCE_DIR}/SFML/MINGW)
    target_link_libraries(${OUT} ${SFML_DIR}/libFLAC.a)
    target_link_libraries(${OUT} ${SFML_DIR}/libogg.a)
    target_link_libraries(${OUT} ${SFML_DIR}/libvorbis.a)
    target_link_libraries(${OUT} ${SFML_DIR}/libvorbisenc.a)
    target_link_libraries(${OUT} ${SFML_DIR}/libvorbisfile.a)
    target_link_libraries(${OUT} ${SFML_DIR}/libsfml-window-s.a)
    target_link_libraries(${OUT} ${SFML_DIR}/libsfml-audio-s.a)
    target_link_libraries(${OUT} ${SFML_DIR}/libsfml-graphics-s.a)
    target_link_libraries(${OUT} ${SFML_DIR}/libsfml-main.a)
    target_link_libraries(${OUT} ${SFML_DIR}/libsfml-network-s.a)
    target_link_libraries(${OUT} ${SFML_DIR}/libsfml-system-s.a)
    target_link_libraries(${OUT} ${SFML_DIR}/libjpeg.a)
    target_link_libraries(${OUT} ${SFML_DIR}/libfreetype.a)
    target_link_libraries(${OUT} winmm gdi32 opengl32 ws2_32)
elseif(APPLE)
    set(SFML_DIR ${CMAKE_SOURCE_DIR}/SFML/OSX)
    target_link_libraries(${OUT} ${SFML_DIR}/FLAC.framework)
    target_link_libraries(${OUT} ${SFML_DIR}/ogg.framework)
    target_link_libraries(${OUT} ${SFML_DIR}/vorbis.framework)
    target_link_libraries(${OUT} ${SFML_DIR}/vorbisenc.framework)
    target_link_libraries(${OUT} ${SFML_DIR}/vorbisfile.framework)
    target_link_libraries(${OUT} ${SFML_DIR}/sfml-window.framework)
    target_link_libraries(${OUT} ${SFML_DIR}/sfml-audio.framework)
    target_link_libraries(${OUT} ${SFML_DIR}/sfml-graphics.framework)
    target_link_libraries(${OUT} ${SFML_DIR}/sfml-network.framework)
    target_link_libraries(${OUT} ${SFML_DIR}/sfml-system.framework)
    target_link_libraries(${OUT} ${SFML_DIR}/SFML.framework)
    target_link_libraries(${OUT} ${SFML_DIR}/freetype.framework)
elseif(UNIX)
    target_link_libraries(${OUT} sfml-window sfml-audio sfml-graphics sfml-network sfml-system)
    target_link_libraries(${OUT} freetype jpeg xcb xcb-randr xcb-image)
    target_link_libraries(${OUT} GL ogg vorbis vorbisenc vorbisfile openal pthread)
endif()



